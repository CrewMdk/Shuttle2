{
  "formatVersion": 1,
  "database": {
    "version": 29,
    "identityHash": "457b5ca134bf00d846b1feb9c686cc28",
    "entities": [
      {
        "tableName": "songs",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `name` TEXT NOT NULL, `track` INTEGER NOT NULL, `disc` INTEGER NOT NULL, `duration` INTEGER NOT NULL, `year` INTEGER NOT NULL, `path` TEXT NOT NULL, `albumArtist` TEXT NOT NULL, `artist` TEXT NOT NULL, `album` TEXT NOT NULL, `size` INTEGER NOT NULL, `mimeType` TEXT NOT NULL, `lastModified` INTEGER NOT NULL, `playbackPosition` INTEGER NOT NULL, `playCount` INTEGER NOT NULL, `lastPlayed` INTEGER, `lastCompleted` INTEGER, `blacklisted` INTEGER NOT NULL, `mediaStoreId` INTEGER)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "track",
            "columnName": "track",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "disc",
            "columnName": "disc",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "duration",
            "columnName": "duration",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "year",
            "columnName": "year",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "path",
            "columnName": "path",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "albumArtist",
            "columnName": "albumArtist",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "artist",
            "columnName": "artist",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "album",
            "columnName": "album",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "size",
            "columnName": "size",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "mimeType",
            "columnName": "mimeType",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "lastModified",
            "columnName": "lastModified",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "playbackPosition",
            "columnName": "playbackPosition",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "playCount",
            "columnName": "playCount",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "lastPlayed",
            "columnName": "lastPlayed",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "lastCompleted",
            "columnName": "lastCompleted",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "excluded",
            "columnName": "blacklisted",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "mediaStoreId",
            "columnName": "mediaStoreId",
            "affinity": "INTEGER",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": true
        },
        "indices": [
          {
            "name": "index_songs_path",
            "unique": true,
            "columnNames": [
              "path"
            ],
            "createSql": "CREATE UNIQUE INDEX IF NOT EXISTS `index_songs_path` ON `${TABLE_NAME}` (`path`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "playlists",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `name` TEXT NOT NULL, `media_store_id` INTEGER)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "mediaStoreId",
            "columnName": "media_store_id",
            "affinity": "INTEGER",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": true
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "playlist_song_join",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `playlistId` INTEGER NOT NULL, `songId` INTEGER NOT NULL, FOREIGN KEY(`playlistId`) REFERENCES `playlists`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE , FOREIGN KEY(`songId`) REFERENCES `songs`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "playlistId",
            "columnName": "playlistId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "songId",
            "columnName": "songId",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": true
        },
        "indices": [
          {
            "name": "index_playlist_song_join_playlistId",
            "unique": false,
            "columnNames": [
              "playlistId"
            ],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_playlist_song_join_playlistId` ON `${TABLE_NAME}` (`playlistId`)"
          },
          {
            "name": "index_playlist_song_join_songId",
            "unique": false,
            "columnNames": [
              "songId"
            ],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_playlist_song_join_songId` ON `${TABLE_NAME}` (`songId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "playlists",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "playlistId"
            ],
            "referencedColumns": [
              "id"
            ]
          },
          {
            "table": "songs",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "songId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      }
    ],
    "views": [
      {
        "viewName": "AlbumData",
        "createSql": "CREATE VIEW `${VIEW_NAME}` AS SELECT songs.album as name, songs.albumArtist as albumArtist, count(distinct songs.id) as songCount, sum(distinct songs.duration) as duration, min(distinct songs.year) as year, min(distinct songs.playCount) as playCount FROM songs WHERE songs.blacklisted == 0 GROUP BY LOWER(songs.albumArtist), LOWER(songs.album) ORDER BY name"
      },
      {
        "viewName": "AlbumArtistData",
        "createSql": "CREATE VIEW `${VIEW_NAME}` AS SELECT songs.albumArtist as name, count(distinct songs.album) as albumCount, count(distinct songs.id) as songCount, min(distinct songs.playCount) as playCount FROM songs WHERE songs.blacklisted == 0 GROUP BY LOWER(songs.albumArtist) ORDER BY name"
      }
    ],
    "setupQueries": [
      "CREATE TABLE IF NOT EXISTS room_master_table (id INTEGER PRIMARY KEY,identity_hash TEXT)",
      "INSERT OR REPLACE INTO room_master_table (id,identity_hash) VALUES(42, '457b5ca134bf00d846b1feb9c686cc28')"
    ]
  }
}